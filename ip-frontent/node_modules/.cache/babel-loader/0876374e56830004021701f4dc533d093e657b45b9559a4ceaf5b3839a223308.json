{"ast":null,"code":"var _jsxFileName = \"/Users/saiaravinth/ip-frontent/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport MusicNFT from './MusicNFT.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAddress = '0xe37cB402D08CE22D340Ef413bFb5666384488339'; // Your address\n\nfunction App() {\n  _s();\n  const [tokenId, setTokenId] = useState('');\n  const [chain, setChain] = useState([]);\n  const [metadata, setMetadata] = useState(null);\n  const getNFTData = async () => {\n    try {\n      console.log('Connecting to provider...');\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      await provider.send('eth_requestAccounts', []);\n      console.log('Provider connected: ', provider);\n      const contract = new ethers.Contract(contractAddress, MusicNFT.abi, provider);\n      console.log('Contract created:', contract);\n      console.log('Fetching history for token:', tokenId);\n      const history = await contract.getOwnershipHistory(tokenId);\n      setChain(history);\n      console.log('Fetching URI...');\n      const uri = await contract.tokenURI(tokenId);\n      console.log('URI:', uri);\n      const response = await fetch(`https://ipfs.io/ipfs/${uri.split('ipfs://')[1]}`);\n      console.log('Metadata:', meta);\n      const meta = await response.json();\n      setMetadata(meta);\n    } catch (error) {\n      console.error('Error fetching NFT data:', error);\n      alert('Error: Check console—invalid token ID or connection issue.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      fontFamily: 'Arial'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"IP Management Lookup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Token ID (e.g., 790)\",\n      value: tokenId,\n      onChange: e => setTokenId(e.target.value),\n      style: {\n        padding: '5px',\n        marginRight: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getNFTData,\n      style: {\n        padding: '5px 10px'\n      },\n      children: \"Check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), chain.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Chain of Custody\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: chain.map((owner, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: owner\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), metadata && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Metadata\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 14\n        }, this), \" \", metadata.name || 'N/A']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Reference:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 14\n        }, this), \" \", metadata.reference || 'N/A']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), metadata.attributes && metadata.attributes.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: metadata.attributes.map((attr, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: `${attr.trait_type}: ${attr.value}`\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No attributes available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"lj6jzTjETtKaBWiiZ+MVtv0husk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ethers","MusicNFT","jsxDEV","_jsxDEV","contractAddress","App","_s","tokenId","setTokenId","chain","setChain","metadata","setMetadata","getNFTData","console","log","provider","providers","Web3Provider","window","ethereum","send","contract","Contract","abi","history","getOwnershipHistory","uri","tokenURI","response","fetch","split","meta","json","error","alert","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","marginRight","onClick","length","map","owner","index","name","reference","attributes","attr","trait_type","_c","$RefreshReg$"],"sources":["/Users/saiaravinth/ip-frontent/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport MusicNFT from './MusicNFT.json';\n\nconst contractAddress = '0xe37cB402D08CE22D340Ef413bFb5666384488339'; // Your address\n\nfunction App() {\n  const [tokenId, setTokenId] = useState('');\n  const [chain, setChain] = useState([]);\n  const [metadata, setMetadata] = useState(null);\n\n  const getNFTData = async () => {\n    try {\n      console.log('Connecting to provider...')\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      await provider.send('eth_requestAccounts', []);\n      console.log('Provider connected: ', provider);\n      const contract = new ethers.Contract(contractAddress, MusicNFT.abi, provider);\n      console.log('Contract created:', contract);\n      console.log('Fetching history for token:', tokenId);\n      const history = await contract.getOwnershipHistory(tokenId);\n      setChain(history);\n      console.log('Fetching URI...');\n      const uri = await contract.tokenURI(tokenId);\n      console.log('URI:', uri);\n      const response = await fetch(`https://ipfs.io/ipfs/${uri.split('ipfs://')[1]}`);\n      console.log('Metadata:', meta);\n      const meta = await response.json();\n      setMetadata(meta);\n    } catch (error) {\n      console.error('Error fetching NFT data:', error);\n      alert('Error: Check console—invalid token ID or connection issue.');\n    }\n  };\n\n  return (\n    <div style={{ padding: '20px', fontFamily: 'Arial' }}>\n      <h1>IP Management Lookup</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Enter Token ID (e.g., 790)\"\n        value={tokenId}\n        onChange={(e) => setTokenId(e.target.value)}\n        style={{ padding: '5px', marginRight: '10px' }}\n      />\n      <button onClick={getNFTData} style={{ padding: '5px 10px' }}>Check</button>\n      {chain.length > 0 && (\n        <div>\n          <h2>Chain of Custody</h2>\n          <ul>\n            {chain.map((owner, index) => (\n              <li key={index}>{owner}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {metadata && (\n        <div>\n          <h2>Metadata</h2>\n          <p><strong>Name:</strong> {metadata.name || 'N/A'}</p>\n          <p><strong>Reference:</strong> {metadata.reference || 'N/A'}</p>\n          {metadata.attributes && metadata.attributes.length > 0 ? (\n            <ul>\n              {metadata.attributes.map((attr, index) => (\n                <li key={index}>{`${attr.trait_type}: ${attr.value}`}</li>\n              ))}\n            </ul>\n          ) : (\n            <p>No attributes available</p>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}