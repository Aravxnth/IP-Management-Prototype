{"ast":null,"code":"var _jsxFileName = \"/Users/saiaravinth/ip-frontent/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport MusicNFT from './MusicNFT.json'; // Your ABI\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAddress = '0xABC123...'; // Replace with your contract address\n\nfunction App() {\n  _s();\n  const [tokenId, setTokenId] = useState('');\n  const [chain, setChain] = useState([]);\n  const [metadata, setMetadata] = useState(null);\n  const getNFTData = async () => {\n    try {\n      // Connect to Sepolia via MetaMask\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      await provider.send('eth_requestAccounts', []); // Prompt MetaMask login\n      const contract = new ethers.Contract(contractAddress, MusicNFT.abi, provider);\n\n      // Fetch chain of custody\n      const history = await contract.getOwnershipHistory(tokenId);\n      setChain(history);\n\n      // Fetch metadata from tokenURI\n      const uri = await contract.tokenURI(tokenId);\n      const response = await fetch(`https://ipfs.io/ipfs/${uri.split('ipfs://')[1]}`);\n      const meta = await response.json();\n      setMetadata(meta);\n    } catch (error) {\n      console.error('Error fetching NFT data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"IP Management Lookup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Token ID (e.g., 790)\",\n      value: tokenId,\n      onChange: e => setTokenId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getNFTData,\n      children: \"Check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), chain.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Chain of Custody\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: chain.map((owner, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: owner\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), metadata && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Metadata\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", metadata.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Reference: \", metadata.reference]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: metadata.attributes.map((attr, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: `${attr.trait_type}: ${attr.value}`\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"lj6jzTjETtKaBWiiZ+MVtv0husk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ethers","MusicNFT","jsxDEV","_jsxDEV","contractAddress","App","_s","tokenId","setTokenId","chain","setChain","metadata","setMetadata","getNFTData","provider","providers","Web3Provider","window","ethereum","send","contract","Contract","abi","history","getOwnershipHistory","uri","tokenURI","response","fetch","split","meta","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","length","map","owner","index","name","reference","attributes","attr","trait_type","_c","$RefreshReg$"],"sources":["/Users/saiaravinth/ip-frontent/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport MusicNFT from './MusicNFT.json'; // Your ABI\n\nconst contractAddress = '0xABC123...'; // Replace with your contract address\n\nfunction App() {\n  const [tokenId, setTokenId] = useState('');\n  const [chain, setChain] = useState([]);\n  const [metadata, setMetadata] = useState(null);\n\n  const getNFTData = async () => {\n    try {\n      // Connect to Sepolia via MetaMask\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      await provider.send('eth_requestAccounts', []); // Prompt MetaMask login\n      const contract = new ethers.Contract(contractAddress, MusicNFT.abi, provider);\n\n      // Fetch chain of custody\n      const history = await contract.getOwnershipHistory(tokenId);\n      setChain(history);\n\n      // Fetch metadata from tokenURI\n      const uri = await contract.tokenURI(tokenId);\n      const response = await fetch(`https://ipfs.io/ipfs/${uri.split('ipfs://')[1]}`);\n      const meta = await response.json();\n      setMetadata(meta);\n    } catch (error) {\n      console.error('Error fetching NFT data:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>IP Management Lookup</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Enter Token ID (e.g., 790)\"\n        value={tokenId}\n        onChange={(e) => setTokenId(e.target.value)}\n      />\n      <button onClick={getNFTData}>Check</button>\n      {chain.length > 0 && (\n        <div>\n          <h2>Chain of Custody</h2>\n          <ul>\n            {chain.map((owner, index) => (\n              <li key={index}>{owner}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {metadata && (\n        <div>\n          <h2>Metadata</h2>\n          <p>Name: {metadata.name}</p>\n          <p>Reference: {metadata.reference}</p>\n          <ul>\n            {metadata.attributes.map((attr, index) => (\n              <li key={index}>{`${attr.trait_type}: ${attr.value}`}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}